name: Build, Test and Deploy Laravel App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, xml, curl, zip, pdo, pgsql
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Cache Laravel config
        run: php artisan config:cache

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonar
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: Run Laravel tests with coverage
        run: php artisan test --coverage --min=70

      # âœ… Lancer SonarQube self-hosted
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube \
            -e SONAR_JDBC_URL=jdbc:postgresql://localhost:5432/sonar \
            -e SONAR_JDBC_USERNAME=sonar \
            -e SONAR_JDBC_PASSWORD=sonar \
            -p 9000:9000 \
            sonarqube:community

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube..."
          for i in {1..30}; do
            curl -s http://localhost:9000/api/system/health | grep -q '"status":"GREEN"' && break
            sleep 10
          done

      - name: Run SonarQube analysis
        run: |
          docker run --rm -e SONAR_HOST_URL="http://host.docker.internal:9000" -e SONAR_LOGIN="admin" \
            -v "${{ github.workspace }}:/usr/src" sonarsource/sonar-scanner-cli

      - name: Cleanup SonarQube
        run: docker stop sonarqube && docker rm sonarqube

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: deploy
        run: |
          echo "Deploying to production server..."
